import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE"
    }
}

rootProject.version = "0.0.1"
group = "com.spaceshift"

allprojects {

    apply plugin: "java"
    apply plugin: "groovy"
    apply plugin: "org.springframework.boot"

    sourceCompatibility = JavaVersion.VERSION_13
    targetCompatibility = JavaVersion.VERSION_13

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url "https://dl.bintray.com/javasabr/maven" }
    }

    ext {
        annotationVersion = "17.0.0"
        rlibVersion = "9.6.0"
        lombokVersion = '1.18.4'
        springbootVersion = '2.2.0.RELEASE'
        springVersion = '5.1.6.RELEASE'
        junitJupiterVersion = "5.5.2"
        testcontainersVersion = "1.12.1"
        groovyVersion = "2.5.8"
        spockVersion = "1.2-groovy-2.5"
        projectReactorVersion = "3.3.0.RELEASE"
        byteBuddyVersion = "1.10.2"
        objenesisVersion = "3.1"
    }

    dependencies {
    
        implementation "com.spaceshift:rlib.network:$rlibVersion"
        implementation "com.spaceshift:rlib.logger.slf4j:$rlibVersion"
        implementation "org.springframework.boot:spring-boot-starter:$springbootVersion"
        implementation "org.springframework.boot:spring-boot-starter-logging:$springbootVersion"
        implementation "io.projectreactor:reactor-core:$projectReactorVersion"
        
        compileOnly "org.jetbrains:annotations:$annotationVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        
        // FIXME to remove
        testCompile "com.hivemq:hivemq-mqtt-client:1.1.2"
        testCompile "io.moquette:moquette-broker:0.12.1"
    
        testCompileOnly "org.jetbrains:annotations:$annotationVersion"
        testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "org.spockframework:spock-core:$spockVersion"
        testImplementation "org.spockframework:spock-spring:$spockVersion"
        testImplementation "org.codehaus.groovy:groovy-all:$groovyVersion"
        testImplementation "net.bytebuddy:byte-buddy-dep:$byteBuddyVersion"
        testImplementation "org.objenesis:objenesis:$objenesisVersion"
    }

    sourceSets {
        main {
            java {
                srcDirs 'src/main/groovy'
            }
        }
        test {
            java {
                srcDirs 'src/test/groovy'
            }
        }
    }
    
    tasks.withType(Test) {
        maxParallelForks = 2
        forkEvery = 100
    }
    
    processResources {
        filter(ReplaceTokens, tokens: [
        ])
    }
}

task buildSingleArtifact(type: GradleBuild) {
    group = 'build'
    description = 'Build all modules -> Build result artifact'
    tasks = ['build', 'bootJar']
}

task buildSingleArtifactWithoutTests(type: GradleBuild) {
    group = 'build'
    description = 'Build all modules without tests -> Build result artifact'
    tasks = ['classes', 'bootJar']
}

wrapper {
    gradleVersion = '6.0'
    distributionType = Wrapper.DistributionType.ALL
}

configurations.each {
    it.exclude group: "org.slf4j", module: "slf4j-log4j12"
}
